// Ques 1. Write a recursive function to calculate the factorial of a given number n.

// Example:
// Input: n = 5
// Output: 120
// Explanation: 5! = 5 * 4 * 3 * 2 * 1 = 120.
#include<bits/stdc++.h>
using namespace std;
int factorial(int n){
    if(n<=1){
        return 1;
    }
    return n*factorial(n-1);
}
int main(){
    int n;
    cin>>n;
    int result=factorial(n);
    cout<<"Factorial of given number is: "<<result<<endl;
}

// Ques 2. Write a recursive function to return the nth Fibonacci number. The Fibonacci sequence is defined as:

// F(0) = 0, F(1) = 1
// F(n) = F(n-1) + F(n-2) for n > 1
// Example:
// Input: n = 6
// Output: 8
// Explanation: Fibonacci series = 0, 1, 1, 2, 3, 5, 8,...
#include<iostream>
using namespace std;
int fibonacci(int n){
    if(n==0){
        return 0;
    }
    if(n==1){
        return 1;
    }
    return fibonacci(n-1)+fibonacci(n-2);
}
int main(){
    int n;
    cin>>n;
    int result=fibonacci(n);
    cout<<"N th fibonacci number is: "<<result<<endl;
}

// Ques 3. Write a recursive function that takes a positive integer and returns the sum of its digits.

// Example:
// Input: n = 1234
// Output: 10
// Explanation: 1 + 2 + 3 + 4 = 10
#include<iostream>
using namespace std;
int addnum(int n){
    if(n==0){
        return 0;
    }
    return (n%10)+addnum(n/10);
}
int main(){
    int n;
    cin>>n;
    int result=addnum(n);
    cout<<"Sum of digits: "<<result<<endl;
}
