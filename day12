// Ques 1 : Write a function void printLinkedList(Node* head) that traverses a singly linked list and prints each element's value. Input: A linked list with elements 10 -> 20 -> 30 -> 40
// Output: 10 20 30 40

#include<bits/stdc++.h>
using namespace std;
struct node{
    int data;
    node* next;
};
void reverse(node*& head,int value){
    node* newnode=new node();
    newnode->data=value;
    newnode->next=nullptr;
    if(head==nullptr){
        head=newnode;
    }else{
        node* temp=head;
        while(temp->next!=nullptr){
            temp=temp->next;
        }
        temp->next=newnode;
    }
}
void printlist(node* head){
    node* temp=head;
    while(temp!=nullptr){
        cout<<temp->data<<" ";
        temp=temp->next;
    }
}
int main(){
    node* head=nullptr;
    int n;
    cin>>n;
    int value;
    for(int i=0;i<n;i++){
        cin>>value;
        reverse(head,value);
    }
    printlist(head);
}


// Ques 2: Write a function void insertAtEnd(Node*& head, int data) that inserts a new node with the given data at the end of a singly linked list. nput: A linked list with elements 10 -> 20 -> 30, and a new data 40
// Output: The linked list becomes 10 -> 20 -> 30 -> 40

#include<iostream>
using namespace std;
struct node{
    int data;
    node* next;
};
void reverse(node*& head,int value){
     node* newnode=new node();
    newnode->data=value;
    newnode->next=nullptr;
    if(head==nullptr){
        head=newnode;
    }else{
        node* temp=head;
        while(temp->next!=nullptr){
            temp=temp->next;
        }
        temp->next=newnode;
    }
}
void printlist(node* head){
    node* temp=head;
    while(temp!=nullptr){
        cout<<temp->data<<" ";
        temp=temp->next;
    }
}
int main(){
    node* head=nullptr;
    int n;
    cin>>n;
    int value;
    for(int i=0;i<n;i++){
        cin>>value;
        reverse(head,value);
    }
    int ele;
    cin>>ele;
    reverse(head,ele);
    printlist(head);
}
