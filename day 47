// Ques 2. Implement a program to rotate the elements of a vector by k positions to the right. Use STL algorithms.
// Input: vec = {1, 2, 3, 4, 5}, k = 2
// Output: {4, 5, 1, 2, 3}
#include<bits/stdc++.h>
using namespace std;
int main(){
  int n;
  cin>>n;
  vector<int> vec(n);
  for(int i=0;i<n;i++){
    cin>>vec[i];
  }
  int k;
  cin>>k;
  k=k%n;
  rotate(vec.begin(),vec.begin()+(n-k),vec.end());
  for(int i=0;i<n;i++){
    cout<<vec[i]<<" ";
  }
}

// Ques 1. Write a function that takes a vector and returns the index of the first occurrence of a target value. If the target does not exist, return -1.
// Input: vec = {1, 3, 5, 7, 9}, target = 7
// Output: 3
#include<bits/stdc++.h>
using namespace std;
int main(){
  int n;
  cin>>n;
  vector<int> vec(n);
  for(int i=0;i<n;i++){
    cin>>vec[i];
  }
  int ele;
  cin>>ele;
  int index=0;
  for(int i=0;i<n;i++){
    if(vec[i]==ele){
      index=i;
    }
  }
  if(index!=0){
    cout<<index<<endl;
  }else{
    cout<<-1<<endl;
  }
}
